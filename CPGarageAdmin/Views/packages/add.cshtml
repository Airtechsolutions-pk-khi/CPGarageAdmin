@model DAL.Models.PackagesInfoViewModel
@using System.Web.Configuration;
@{
    ViewBag.Title = "add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>

    .text-editor-textarea {
        min-height: 300px;
        border: 1px solid #ced4da;
        padding: 10px;
        border-radius: 4px;
        width: 100%;
    }
</style>
<link href="~/assets/css/component-custom-switch.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

<script type="text/javascript">
    function UserSuccess(data) {
        console.log(data)
        if (data.data == 1) {
            window.location.href = "/packages/list";
        }
        else {
            alert("PACKAGE CANNOT CREATED SUCCESSFULLY")
        }
    }

</script>
<div class="card">

    <div class="card-body">
        <div class="row form-group">
            <div class="col-12">
                <h4 class="card-title m-0">Add Package</h4>
            </div>
        </div>
        <hr />

        <div class="row ">
            <div class="col-lg-12 mx-auto">
                <div class="card mt-2 mx-auto p-4 bg-light">
                    <div class="card-body bg-light">
                        <div class="container">
                            @using (Ajax.BeginForm("Save", "packages", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalUser", OnSuccess = "UserSuccess" }))
                            {
                                <div id="packageid">

                                    @Html.HiddenFor(x => x.PackageInfoID)
                                </div>
                                <form id="contact-form" role="form">
                                    <div class="controls">
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_email">Package Name *</label>
                                                    @*<input type="text" class="form-control" placeholder="Enter Package Name" id="txtName" />*@
                                                    @Html.TextBoxFor(model => model.PackageName, new { @class = "form-control", placeholder = "Enter Package Name", @Id = "txtName" })
                                                    @Html.ValidationMessageFor(model => model.PackageName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_email">Package Price</label>
                                                    @*<input type="number" class="form-control" placeholder="Enter Package Price" id="txtPrice" />*@
                                                    @Html.TextBoxFor(model => model.PackagePrice, new { @class = "form-control", placeholder = "Enter Package Price", @Id = "txtPrice", @type = "number" })
                                                    @Html.ValidationMessageFor(model => model.PackagePrice, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_need">Device Count</label>
                                                    @*<input type="number" class="form-control" placeholder="Enter Device Count" id="txtDevCount" />*@
                                                    @Html.TextBoxFor(model => model.DeviceCount, new { @class = "form-control", placeholder = "Enter Device Count", @Id = "txtDevCount", @type = "number" })
                                                    @Html.ValidationMessageFor(model => model.DeviceCount, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_email">Locations Limit</label>

                                                    @Html.TextBoxFor(model => model.LocationsLimit, new { @class = "form-control", placeholder = "Enter Location Limit", @Id = "txtLocLim", @type = "number" })
                                                    @Html.ValidationMessageFor(model => model.LocationsLimit, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_need">No. Of Days</label>
                                                    @Html.TextBoxFor(model => model.NoofDays, new { @class = "form-control", placeholder = "Enter No Of Days", @Id = "txtDevCount", @type = "text" })
                                                    @Html.ValidationMessageFor(model => model.NoofDays, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            @*<div class="col-md-6">
                                                    <div class="form-group">
                                                        <label for="form_need">Package Description</label>
                                                        @Html.TextAreaFor(model => model.PackageDescription, new { @class = "form-control", placeholder = "Enter Description", @Id = "txtDesc" })
                                                        @Html.ValidationMessageFor(model => model.PackageDescription, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>*@

                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="form_need">Package Description</label>
                                                    <div class="container">

                                                        <div class="text-editor-toolbar" style="border: 1px solid #ced4da;">
                                                            <button type="button" class="btn btn-outline-secondary" data-command="bold"><b>B</b></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="italic"><i>I</i></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="underline"><u>U</u></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="justifyLeft"><i class="fa fa-align-left"></i></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="justifyCenter"><i class="fa fa-align-center"></i></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="justifyRight"><i class="fa fa-align-right"></i></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="insertOrderedList"><i class="fa fa-list-ol"></i></button>
                                                            <button type="button" class="btn btn-outline-secondary" data-command="insertUnorderedList"><i class="fa fa-list"></i></button>

                                                        </div>

                                                        <div class="form-group">

                                                            @*<div class="text-editor-textarea" contenteditable id="txtDesc"></div>*@
                                                            @Html.TextAreaFor(model => model.PackageDescription, new { @class = "text-editor-textarea", placeholder = "Enter Description", @Id = "txtDesc" })
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>


                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    @*<label for="form_need">Status </label>*@

                                                    <div class="custom-control custom-switch custom-switch-md">
                                                        @Html.CheckBoxFor(model => model.StatusID, new { @class = "custom-switch custom-switch-primary mb-2", placeholder = "", @for = "StatusID" })
                                                        <label class="custom-switch-btn" for="StatusID" style=" padding-top: 4px !important; padding-left: 14px;"> Status</label>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    @*<label for="form_need">Is Inventory </label>*@
                                                    <div class="custom-control custom-switch custom-switch-md">
                                                        @Html.CheckBoxFor(model => model.IsInventory, new { @class = "custom-switch custom-switch-primary mb-2", placeholder = "", @for = "IsInventory" })
                                                        <label class="custom-switch-btn" for="IsInventory" style=" padding-top: 4px !important; padding-left: 14px;"> Is Inventory</label>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-2">
                                                <div class="form-group">
                                                    @*<label for="form_need">Is GarageGo </label>*@
                                                    <div class="custom-control custom-switch custom-switch-md">
                                                        @Html.CheckBoxFor(model => model.IsGarageGo, new { @class = "custom-switch custom-switch-primary mb-2", placeholder = "", @for = "IsGarageGo" })
                                                        <label class="custom-switch-btn" for="IsGarageGo" style=" padding-top: 4px !important; padding-left: 14px;"> Is GarageGo </label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-md-2">
                                                <button type="submit" class="btn btn-primary mr-2">Save</button>

                                                @*<button   onclick="postData();" class="btn btn-primary mr-2"><span>Save</span></button>*@
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>



<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

<script>
    $(document).ready(function () {
        // Handle toolbar button clicks
        $('.text-editor-toolbar button').click(function () {
            var command = $(this).data('command');
            document.execCommand(command, false, null);
        });
    });
</script>

<script>
    function postData() {
        var PackagesInfo = new Object();
        PackagesInfo.PackageName = $('#txtName').val();
        PackagesInfo.PackagePrice = $('#txtPrice').val();
        PackagesInfo.PackageDescription = $('#txtDesc').html();
        PackagesInfo.DeviceCount = $('#txtDevCount').val();
        PackagesInfo.LocationsLimit = $('#txtLocLim').val();
        PackagesInfo.StatusID = $('#StatusID').val();
        PackagesInfo.IsInventory = $('#IsInventory').val();
        PackagesInfo.IsGarageGo = $('#IsGarageGo').val();
        PackagesInfo.PackageInfoID = $('#packageid').val();

        var PkgInfo = JSON.stringify({ 'data': PackagesInfo });

        $.ajax({
            type: "POST",
            url: '/Packages/Save',
            data: PkgInfo,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                console.log(data);
                if (data.data == 1) {
                    window.location.href = ('list');
                }
                else {
                    alert('Something went wrong!')
                }
            },
            error: function (xhr, textStatus, errorThrown) {
            }
        });
    };




</script>

