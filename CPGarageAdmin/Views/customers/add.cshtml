@model DAL.Models.CustomerViewModel
@using System.Web.Configuration;
@{
    ViewBag.Title = "add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .custom-radio .custom-control-label::before {
        border-radius: 50%;
    }

    .custom-radio .custom-control-input:checked ~ .custom-control-label::after {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }

    .custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before {
        background-color: rgba(78, 115, 223, 0.5);
    }

    .custom-switch {
        padding-left: 2.25rem;
    }

        .custom-switch .custom-control-label::before {
            left: -2.25rem;
            width: 1.75rem;
            pointer-events: all;
            border-radius: 0.5rem;
        }

        .custom-switch .custom-control-label::after {
            top: calc(0.25rem + 2px);
            left: calc(-2.25rem + 2px);
            width: calc(1rem - 4px);
            height: calc(1rem - 4px);
            background-color: #b7b9cc;
            border-radius: 0.5rem;
            transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

    @@media (prefers-reduced-motion: reduce) {
        .custom-switch .custom-control-label::after {
            transition: none;
        }
    }

    .custom-switch .custom-control-input:checked ~ .custom-control-label::after {
        background-color: #fff;
        transform: translateX(0.75rem);
    }

    .custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before {
        background-color: rgba(78, 115, 223, 0.5);
    }
</style>
<script type="text/javascript">
    function UserSuccess(result) {
        if (result.success) {
            window.location.href = "/customers/list";
        }
        else {
            alert("CUSTOMER CANNOT CREATED SUCCESSFULLY")
        }
    }

</script>
@using (Ajax.BeginForm("Save", "Customers", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalUser", OnSuccess = "UserSuccess" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="row">
        <div class="col-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Customer Details</h4>

                    <div class="forms-sample">
                        <div class="form-group">
                            <label for="exampleInputName1">First name</label>
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail3">Last Name</label>
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Email</label>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Password</label>
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Company Name</label>
                            @Html.TextBoxFor(model => model.Company, new { @class = "form-control", placeholder = "" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Contact</label>
                            @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", placeholder = "" })
                        </div>


                        <button type="submit" class="btn btn-primary mr-2">Save</button>
                        <a href="~/customers/list" class="btn btn-light">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Location Details</h4>
                    @Html.HiddenFor(model => model.UserID, new Dictionary<string, object> { { "data-val", false } })
                    <div class="forms-sample">
                        <div class="form-group">
                            <label for="exampleInputName1">Location Name</label>
                            @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail3">Location Email</label>
                            @Html.TextBoxFor(model => model.LocationEmail, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.LocationEmail, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Location Contact</label>
                            @Html.TextBoxFor(model => model.LocationContactNo, new { @class = "form-control", placeholder = "" })
                        </div>

                        <div class="form-group">
                            <label for="exampleInputPassword4">Location Address</label>
                            @Html.TextBoxFor(model => model.LocationAddress, new { @class = "form-control", placeholder = "" })
                        </div>
                    </div>
                    <div class="forms-sample">
                        <div class="form-group">
                            <h4 class="card-title">SMS Activation</h4>
                            <div class="form-check" style="margin-left:20px">
                                @Html.CheckBoxFor(model => model.IsSMSActivate, new { @class = "form-check-input", placeholder = "", @for = "exampleCheck1" })
                                <label class="form-check-label" for="exampleCheck1">SMS Activation</label>
                            </div>
                        </div>
                        <div class="form-group">
                            <h4 class="card-title">Activation Status</h4>
                            <div class="custom-control custom-switch custom-switch-md">
                                @Html.CheckBoxFor(model => model.StatusID, new { @class = "custom-control-input", placeholder = "", @for = "StatusID", @checked= "checked" })
                                <label class="custom-control-label form-check-label" for="StatusID" style=" padding-top: 4px !important; padding-left: 14px;"> Activation Status</label>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>

}

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>