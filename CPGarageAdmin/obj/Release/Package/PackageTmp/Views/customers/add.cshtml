@model DAL.Models.CustomerViewModel
@using System.Web.Configuration;
@{
    ViewBag.Title = "add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .custom-radio .custom-control-label::before {
        border-radius: 50%;
    }

    .custom-radio .custom-control-input:checked ~ .custom-control-label::after {
        background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'%3e%3ccircle r='3' fill='%23fff'/%3e%3c/svg%3e");
    }

    .custom-radio .custom-control-input:disabled:checked ~ .custom-control-label::before {
        background-color: rgba(78, 115, 223, 0.5);
    }

    .custom-switch {
        padding-left: 2.25rem;
    }

        .custom-switch .custom-control-label::before {
            left: -2.25rem;
            width: 1.75rem;
            pointer-events: all;
            border-radius: 0.5rem;
        }

        .custom-switch .custom-control-label::after {
            top: calc(0.25rem + 2px);
            left: calc(-2.25rem + 2px);
            width: calc(1rem - 4px);
            height: calc(1rem - 4px);
            background-color: #b7b9cc;
            border-radius: 0.5rem;
            transition: transform 0.15s ease-in-out, background-color 0.15s ease-in-out, border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

    @@media (prefers-reduced-motion: reduce) {
        .custom-switch .custom-control-label::after {
            transition: none;
        }
    }

    .custom-switch .custom-control-input:checked ~ .custom-control-label::after {
        background-color: #fff;
        transform: translateX(0.75rem);
    }

    .custom-switch .custom-control-input:disabled:checked ~ .custom-control-label::before {
        background-color: rgba(78, 115, 223, 0.5);
    }

    .formdiv#loading {
        display: none;
    }

    .modal {
        position: fixed;
        z-index: 999;
        height: 100%;
        width: 100%;
        top: 0;
        background-color: Black;
        filter: alpha(opacity=60);
        opacity: 0.6;
        -moz-opacity: 0.8;
        display: none;
    }

    .center {
        z-index: 1000;
        margin: 50pxauto;
        padding: 10px;
        width: 130px;
        background-color: White;
        border-radius: 10px;
        filter: alpha(opacity=100);
        opacity: 1;
        -moz-opacity: 1;
    }

    .centerimg {
        height: 128px;
        width: 128px;
    }

    /* Loader and modal styles */
    .modal {
        position: fixed;
        z-index: 9999;
        height: 100%;
        width: 100%;
        top: 0;
        left: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
    }

    .center {
        z-index: 10000;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        padding: 10px;
        background-color: white;
        border-radius: 10px;
        text-align: center;
    }

        .center img {
            height: 60px;
            width: 60px;
        }
</style>
<script type="text/javascript">
    function UserSuccess(result) {
        debugger
        if (result.success) {
            $('#progress').hide(); // Hide the loader
            $('button[type="submit"]').attr('disabled', false); // Enable the submit button
            alert("CUSTOMERS UPDATED SUCCESSFULLY"); // Display success message
            window.location.href = "/customers/list"; // Redirect to car list
        } else {
            $('#progress').hide(); // Hide the loader
            $('button[type="submit"]').attr('disabled', false); // Enable the submit button
        }
    }
</script>

<script type="text/javascript">
    $(document).ready(function () {
        // Show loader and disable submit button on form submit
        $('#customerForm').on('submit', function () {
            $('#progress').show(); // Display the loader
            $('button[type="submit"]').attr('disabled', true); // Disable the submit button
        });

        // Handle success callback
        function UserSuccess(result) {
            if (result.success) {
                window.location.href = "/customers/list";
            } else {
                alert("CUSTOMER CANNOT BE CREATED SUCCESSFULLY");
                $('#progress').hide(); // Hide the loader
                $('button[type="submit"]').attr('disabled', false); // Enable the submit button
            }
        }

        $('#ddlPackage').on('change', function () {
            GetSelectedTextValue(this);
        });

        function setExpiryDateValue(dateString) {
            $('#expdate').val(dateString);
        }

        function formatDateToISO(date) {
            var year = date.getFullYear();
            var month = String(date.getMonth() + 1).padStart(2, '0');
            var day = String(date.getDate()).padStart(2, '0');
            return year + "-" + month + "-" + day;
        }

        function GetSelectedTextValue(ddlPackage) {
            var selectedValue = $(ddlPackage).val();

            if (selectedValue === "1") {
                var today = new Date();
                today.setDate(today.getDate() + 15);
                setExpiryDateValue(formatDateToISO(today));
            } else {
                var today = new Date();
                today.setFullYear(today.getFullYear() + 1);
                setExpiryDateValue(formatDateToISO(today));
            }
        }

        GetSelectedTextValue($('#ddlPackage'));
    });
</script>
<script type="text/javascript" src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        // Update cities when country changes
        $('#CountryDropdown').change(function () {
            debugger
            var selectedCountry = $(this).val();
            if (selectedCountry) {
                $.ajax({
                    url: '@Url.Action("GetCitiesByCountry", "customers")',
                    type: 'GET',
                    data: { countryCode: selectedCountry },
                    success: function (data) {
                        var cityDropdown = $('#CityDropdown');
                        cityDropdown.empty(); // Clear existing options
                        cityDropdown.append($('<option>').text('-- Select City --').attr('value', ''));
                        $.each(data, function (index, item) {
                            cityDropdown.append($('<option>').text(item.Name).attr('value', item.ID));
                        });
                        $('#DistrictDropdown').empty().append($('<option>').text('-- Select District --').attr('value', ''));
                    },
                    error: function () {
                        alert('Error retrieving cities. Please try again.');
                    }
                });
            }
        });

        // Update districts when city changes
        @*$('#CityDropdown').change(function () {
            debugger
            var selectedCityId = $(this).val();
            if (selectedCityId) {
                $.ajax({
                    url: '@Url.Action("GetDistrictsByCity", "customers")',
                    type: 'GET',
                    data: { cityId: selectedCityId },
                    success: function (data) {
                        var districtDropdown = $('#DistrictDropdown');
                        districtDropdown.empty(); // Clear existing options
                        districtDropdown.append($('<option>').text('-- Select District --').attr('value', ''));
                        $.each(data, function (index, item) {
                            districtDropdown.append($('<option>').text(item.District).attr('value', item.District));
                        });
                    },
                    error: function () {
                        alert('Error retrieving districts. Please try again.');
                    }
                });
            }
        });*@
    });

    $(document).ready(function () {
        // Initialize the datepicker with day-month-year format
        $('#CreationDate').datepicker({
            dateFormat: 'dd-mm-yy',  // Set the format as day-month-year
            changeMonth: true,
            changeYear: true,
            yearRange: '1900:2100',  // Set the year range (optional)
        });

        // Set today's date as the default value in dd-mm-yyyy format
        var today = new Date();
        var day = today.getDate().toString().padStart(2, '0');  // Add leading zero to day
        var month = (today.getMonth() + 1).toString().padStart(2, '0');  // Add leading zero to month
        var year = today.getFullYear();

        // Set the value of the input field to today's date in the format dd-mm-yyyy
        $('#CreationDate').val(day + '-' + month + '-' + year);
    });


    $(document).ready(function () {

        $('#ddlPackage').on('change', function () {
            GetSelectedTextValue(this);
        });

        function setExpiryDateValue(dateString) {
            $('#expdate').val(dateString);
        }
        function formatDateToISO(date) {
            var year = date.getFullYear();
            var month = String(date.getMonth() + 1).padStart(2, '0');
            var day = String(date.getDate()).padStart(2, '0');
            return year + "-" + month + "-" + day;
        }

        function GetSelectedTextValue(ddlPackage) {

            var selectedValue = $(ddlPackage).val();

            if (selectedValue === "1") {
                var today = new Date();
                today.setDate(today.getDate() + 15);
                setExpiryDateValue(formatDateToISO(today));
            } else {
                var today = new Date();
                today.setFullYear(today.getFullYear() + 1);
                setExpiryDateValue(formatDateToISO(today));
            }
        }
        GetSelectedTextValue($('#ddlPackage'));
    });
</script>
@using (Ajax.BeginForm("Save", "Customers", new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "ModalUser", OnSuccess = "UserSuccess" }, new { @id = "customerForm" }))
{
    <div id="progress" class="modal">
        <div class="center">
            <img src="~/assets/images/loader.gif" alt="Loading..." />
            <p>Please wait...</p>
        </div>
    </div>
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">
        <div class="col-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Customer Details</h4>

                    <div class="forms-sample">
                        <div class="form-group">
                            <label for="exampleInputName1">First name</label>
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail3">Last Name</label>
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Email</label>
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Password</label>
                            @Html.TextBoxFor(model => model.Password, new { @class = "form-control", placeholder = "" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Company Name</label>
                            @Html.TextBoxFor(model => model.Company, new { @class = "form-control", placeholder = "" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Contact</label>
                            @Html.TextBoxFor(model => model.ContactNo, new { @class = "form-control", placeholder = "" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Business Type</label>
                            @Html.DropDownListFor(model => model.BusinessType, new List<SelectListItem>
                             {
                                new SelectListItem{ Text = "Oil Change", Value = "Oil Change"},
                                new SelectListItem{ Text = "Car wash", Value = "Car wash"},
                                new SelectListItem{ Text = "Mechanic", Value = "Mechanic"},
                                new SelectListItem{ Text = "Protection", Value = "Protection"},
                                new SelectListItem{ Text = "Tyres", Value = "Tyres"},
                                new SelectListItem{ Text = "Electric", Value = "Electric"},
                                new SelectListItem{ Text = "A/C", Value = "A/C"},
                                new SelectListItem{ Text = "Programming", Value = "Programming"},
                                new SelectListItem{ Text = "Painting", Value = "Painting"},
                                new SelectListItem{ Text = "Batteries", Value = "Batteries"},
                             }, new { @class = "form-control" })
                        </div>


                        <div class="form-group">
                            <label for="CreationDate">Creation Date</label>
                            @*@Html.TextBoxFor(model => model.CreatedDate, new { @class = "form-control", placeholder = "Select Date", id = "CreationDate" })*@
                            <input class="form-control" name="CreatedDate" type="date" />
                        </div>


                        <button type="submit" class="btn btn-dark mr-2">Save</button>
                        <a href="~/customers/list" class="btn btn-light">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6 grid-margin stretch-card">
            <div class="card">
                <div class="card-body">
                    <h4 class="card-title">Location Details</h4>
                    @Html.HiddenFor(model => model.UserID, new Dictionary<string, object> { { "data-val", false } })
                <div class="forms-sample">
                    <div class="form-group">
                        <label for="exampleInputName1">Location Name</label>
                        @Html.TextBoxFor(model => model.LocationName, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(model => model.LocationName, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail3">Location Email</label>
                        @Html.TextBoxFor(model => model.LocationEmail, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(model => model.LocationEmail, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Location Contact</label>
                        @Html.TextBoxFor(model => model.LocationContactNo, new { @class = "form-control", placeholder = "" })
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword4">Location Address</label>
                        @Html.TextBoxFor(model => model.LocationAddress, new { @class = "form-control", placeholder = "" })
                    </div>
                    
                    
                    <div class="form-group">
                        <label for="CountryDropdown">Country</label>
                        @Html.DropDownList(
                            "CountryID",                                  // Name of the property to bind
                            ViewBag.CountryList as IEnumerable<SelectListItem>, // Dropdown options from ViewBag
                            "Select a Country",                           // Placeholder text
                            new { @class = "form-control", @id = "CountryDropdown" } // HTML attributes
                        )
                    </div>
                    
                    
                    
                    @*<div class="form-group">
                        <label for="exampleInputPassword4">Country</label>
                        @Html.DropDownListFor(model => model.Currency, new List<SelectListItem>
                                                             {
                            new SelectListItem{ Text = "Saudi", Value = "SA"},
                            new SelectListItem{ Text = "Bahrain", Value = "BHR"},
                            new SelectListItem{ Text = "Kuwait", Value = "KWT"},
                            new SelectListItem{ Text = "Oman", Value = "OMN"},
                            new SelectListItem{ Text = "Qatar", Value = "QAT"},
                            new SelectListItem{ Text = "UAE", Value = "ARE"},
                            new SelectListItem{ Text = "Yemen", Value = "YEM"}
                   }, new { @class = "form-control", @id = "CountryDropdown" })
                    </div>*@

                    <div class="form-group">
                        <label for="exampleInputPassword4">City</label>
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.CityID,
                                new SelectList(Enumerable.Empty<SelectListItem>()), // Initially empty
                                "-- Select City --",
                                new { @class = "form-control", @id = "CityDropdown" })
                        </div>
                    </div>

                    @*<div class="form-group">
                        <label for="exampleInputPassword4">District</label>
                        <div class="form-group">
                            @Html.DropDownListFor(model => model.ID,
                                new SelectList(Enumerable.Empty<SelectListItem>()), // Initially empty
                                "-- Select District --",
                                new { @class = "form-control", @id = "DistrictDropdown" })
                        </div>
                    </div>*@

                  
                </div>
                    <div class="forms-sample">
                        <div class="form-group">
                            <label for="exampleInputPassword4">Select Package</label>
                            <div class="form-group">
                                @Html.DropDownListFor(model => model.PackageInfoID, ViewBag.packages as SelectList, new { @class = "form-control col-md-12", @Name = "PackageInfoID", @Id = "ddlPackage", @onchange = "GetSelectedTextValue(this)" })
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword4">Expiry Date</label>
                            <input class="form-control" name="ExpiryDate" type="date" id="expdate" />
                        </div>
                        <div class="form-row">
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsSMSActivate, new { @class = "custom-control-input", placeholder = "", @for = "IsSMSActivate" })
                                    <label class="custom-control-label form-check-label" for="IsSMSActivate" style=" padding-top: 4px !important; padding-left: 14px;">SMS Activation</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsAccountingAddons, new { @class = "custom-control-input", placeholder = "", @for = "IsAccountingAddons" })
                                    <label class="custom-control-label form-check-label" for="IsAccountingAddons" style=" padding-top: 4px !important; padding-left: 14px;">Is Accounting Addons</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsGarageGo, new { @class = "custom-control-input", placeholder = "", @for = "IsGarageGo" })
                                    <label class="custom-control-label form-check-label" for="IsGarageGo" style=" padding-top: 4px !important; padding-left: 14px;">Is Garage GO</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsCashier, new { @class = "custom-control-input", placeholder = "", @for = "IsCashier" })
                                    <label class="custom-control-label form-check-label" for="IsCashier" style=" padding-top: 4px !important; padding-left: 14px;">Is Cashier</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsYakeen, new { @class = "custom-control-input", placeholder = "", @for = "IsYakeen" })
                                    <label class="custom-control-label form-check-label" for="IsYakeen" style=" padding-top: 4px !important; padding-left: 14px;">Is Yakeen</label>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsMojaz, new { @class = "custom-control-input", placeholder = "", @for = "IsMojaz" })
                                    <label class="custom-control-label form-check-label" for="IsMojaz" style=" padding-top: 4px !important; padding-left: 14px;">Is Mojaz</label>
                                </div>
                            </div>
                            @*<div class="col-md-6">
                                <div class="custom-control custom-switch custom-switch-md">
                                    @Html.CheckBoxFor(model => model.IsDefaultCar, new { @class = "custom-control-input", placeholder = "", @for = "IsDefaultCar" })
                                    <label class="custom-control-label form-check-label" for="IsDefaultCar" style=" padding-top: 4px !important; padding-left: 14px;">Is DefaultCar</label>
                                </div>
                            </div>*@
                        </div>

                        <div class="form-group">
                            <br />
                            <div class="custom-control custom-switch custom-switch-md">
                                @Html.CheckBoxFor(model => model.StatusID, new { @class = "custom-control-input", placeholder = "", @for = "StatusID", @checked = "checked" })
                                <label class="custom-control-label form-check-label" for="StatusID" style=" padding-top: 4px !important; padding-left: 14px;"> Activation Status</label>
                            </div>
                            <div class="custom-control custom-switch custom-switch-md" hidden>
                                @Html.TextBoxFor(model => model.LastUpdatedDate, new { @class = "custom-control-input", placeholder = "", @for = "LastUpdatedDate", id = "enddate" })
                                @Html.TextBoxFor(model => model.CreatedDate, new { @class = "custom-control-input", placeholder = "", @for = "CreatedDate", id = "startdate" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>

